<Type Name="SubreportProcessingEventHandler" FullName="Microsoft.Reporting.WinForms.SubreportProcessingEventHandler">
  <TypeSignature Language="C#" Value="public delegate void SubreportProcessingEventHandler(object sender, SubreportProcessingEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SubreportProcessingEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ReportViewer.WinForms</AssemblyName>
    <AssemblyVersion>11.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="Microsoft.Reporting.WinForms.SubreportProcessingEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">To be added.</param>
    <param name="e">To be added.</param>
    <summary>Represents the method that will handle the &lt;see cref="E:Microsoft.Reporting.WinForms.LocalReport.SubreportProcessing"&gt; event of a &lt;xref:Microsoft.Reporting.WinForms.ReportViewer&gt;.</summary>
    <remarks>
      <format Type="text/markdown"><![CDATA[  
  
## Remarks  
 You must supply data for any data sources used in subreports. To do this, you must supply an event handler for the subreport processing event.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 For an example, see the <xref:Microsoft.Reporting.WinForms.LocalReport.SubreportProcessing> method of the <xref:Microsoft.Reporting.WinForms.LocalReport> class.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>